import csv
import pyodbc

# Establecer la cadena de conexión
connection_string = 'DRIVER={SQL Server};SERVER=190.210.182.24\\sqlexpress;DATABASE=Pisos;UID=sa;PWD=Open6736'
connection = pyodbc.connect(connection_string)

# Crear un cursor para ejecutar consultas
cursor = connection.cursor()

# Configurar ARITHABORT a ON
cursor.execute("SET ARITHABORT ON")

# Lista de parámetros
parametros = [47832,
47833,
47834,
47836,
47837,
47838,
47839,
47840,
47841,
47842,
47843,
47844,
47845,
47846,
47847,
47848,
47849,
47850,
47852,
47853,
47854,
47855,
47856,
47860,
47863,
47864,
47865,
47866,
47867,
47868,
47869,
47870,
47871,
47872,
47873,
47874,
47875,
47876,
47877,
47878,
47879,
47880,
47881,
47882,
47883,
47884,
47885,
47886,
47889,
47891,
47894,
47895,
47896,
47897,
47898,
47899,
47900,
47901,
47903,
47904,
47905,
47907,
47908,
47909,
47910,
47911,
47912,
47913,
47914,
47916,
47917,
47919,
47924,
47925,
47926,
47927,
47928,
47929,
47932,
47933,
47934,
47935,
47936,
47937,
47938,
47939,
47940,
47942,
47943,
47944,
47945,
47946,
47947,
47948,
47951,
47954,
47955,
47956,
47957,
47960,
47961,
47963,
47965,
47970,
47971,
47972,
47975,
47977,
47978,
47979,
47980,
47981,
47983,
47984,
47988,
47989,
47990,
47991,
47992,
47993,
47995,
47997,
47998,
47999,
48000,
48001,
48002,
48003,
48004,
48006,
48007,
48008,
48010,
48012,
48013,
48014,
48015,
48016,
48017,
48019,
48020,
48023,
48024,
48025,
48027,
48028,
48029,
48030,
48031,
48033,
48034,
48035,
48037,
48038,
48039,
48040,
48041,
48042,
48043,
48045,
48046,
48049,
48051,
48052,
48053,
48054,
48055,
48056,
48057,
48060,
48061,
48062,
48063,
48065,
48066,
48067,
48069,
48070,
48071,
48072,
48073,
48074,
48076,
48078,
48079,
48080,
48081,
48082,
48083,
48084,
48085,
48086,
48087,
48088,
48092,
48093,
48094,
48097,
48099,
48101,
48102,
48103,
48105,
48107,
48111,
48113,
48114,
48115,
48117,
48119,
48120,
48121,
48124,
48125,
48127,
48129,
48132,
48133,
48134,
48135,
48138,
48140,
48141,
48142,
48143,
48144,
48145,
48146,
48149,
48150,
48151,
48152,
48153,
48154,
48158,
48160,
48162,
48164,
48166,
48170,
48171,
48175,
48177,
48180,
48181,
48182,
48183,
48184,
48185,
48186,
48187,
48190,
48193,
48195,
48196,
48197,
48198,
48199,
48200,
48202,
48203,
48204,
48206,
48207,
48208,
48209,
48210,
48211,
48212,
48213,
48216,
48217,
48218,
48219,
48222,
48224,
48225,
48226,
48227,
48228,
48229,
48230,
48231,
48232,
48233,
48235,
48237,
48240,
48242,
48243,
48244,
48245,
48246,
48247,
48248,
48251,
48253,
48254,
48255,
48256,
48257,
48258,
48260,
48261,
48263,
48264,
48266,
48267,
48269,
48270,
48271,
48272,
48273,
48274,
48275,
48276,
48279,
48280,
48281,
48283,
48285,
48286,
48287,
48291,
48292,
48294,
48296,
48297,
48298,
48299,
48300,
48301,
48304,
48305,
48306,
48308,
48309,
48310,
48311,
48312,
48313,
48315,
48317,
48318,
48320,
48322,
48324,
48325,
48326,
48329,
48330,
48332,
48333,
48334,
48336,
48337,
48338,
48339,
48340,
48341,
48344,
48345,
48346,
48347,
48351,
48352,
48354,
48355,
48356,
48357,
48358,
48359,
48360,
48362,
48363,
48365,
48366,
48368,
48369,
48370,
48371,
48374,
48375,
48376,
48378,
48379,
48380,
48382,
48383,
48385,
48387,
48388,
48389,
48390,
48393,
48394,
48395,
48396,
48397,
48398,
48401,
48402,
48403,
48404,
48406,
48407,
48408,
48410,
48411,
48412,
48413,
48414,
48415,
48416,
48418,
48419,
48420,
48421,
48423,
48427,
48428,
48430,
48432,
48433,
48434,
48435,
48436,
48437,
48438,
48439,
48440,
48441,
48442,
48443,
48444,
48445,
48446,
48447,
48448,
48449,
48450,
48452,
48453,
48454,
48456,
48458,
48460,
48463,
48464,
48465,
48466,
48467,
48469,
48470,
48472,
48474,
48479,
48484,
48485,
48486,
48487,
48488,
48489,
48490,
48492,
48493,
48494,
48495,
48497,
48499,
48502,
48505,
48506,
48508,
48509,
48511,
48513,
48514,
48516,
48518,
48519,
48521,
48522,
48523,
48525,
48526,
48527,
48528,
48529,
48530,
48531,
48532,
48533,
48534,
48535,
48539,
48540,
48542,
48543,
48544,
48545,
48546,
48547,
48548,
48549,
48550,
48552,
48554,
48555,
48556,
48557,
48558,
48561,
48562,
48566,
48571,
48573,
48574,
48577,
48578,
48579,
48582,
48583,
48584,
48585,
48588,
48589,
48592,
48593,
48594,
48595,
48596,
48597,
48598,
48599,
48600,
48601,
48602,
48603,
48604,
48607,
48609,
48610,
48612,
48613,
48614,
48615,
48616,
48617,
48618,
48619,
48622,
48623,
48624,
48625,
48626,
48627,
48629,
48631,
48632,
48633,
48634,
48635,
48636,
48638,
48639,
48642,
48643,
48644,
48645,
48647,
48648,
48649,
48650,
48651,
48654,
48656,
48658,
48659,
48662,
48663,
48665,
48666,
48667,
48668,
48669,
48670,
48672,
48675,
48676,
48677,
48679,
48680,
48681,
48682,
48683,
48684,
48685,
48686,
48687,
48688,
48691,
48692,
48694,
48697,
48698,
48699,
48701,
48702,
48703,
48704,
48706,
48707,
48709,
48711,
48712,
48713,
48714,
48715,
48716,
48718,
48720,
48721,
48722,
48723,
48724,
48725,
48726,
48728,
48730,
48732,
48733,
48734,
48735,
48736,
48737,
48738,
48739,
48740,
48741,
48742,
48743,
48744,
48745,
48746,
48747,
48748,
48749,
48751,
48752,
48753,
48754,
48755,
48756,
48757,
48758,
48759,
48760,
48761,
48762,
48764,
48765,
48766,
48767,
48768,
48772,
48773,
48774,
48775,
48776,
48777,
48778,
48779,
48780,
48781,
48782,
48783,
48784,
48785,
48786,
48787,
48788,
48789,
48790,
48791,
48792,
48793,
48794,
48797,
48798,
48800,
48801,
48802,
48803,
48805,
48807,
48808,
48809,
48811,
47835,
47851,
47857,
47858,
47859,
47861,
47862,
47887,
47888,
47890,
47892,
47893,
47902,
47906,
47915,
47918,
47920,
47921,
47922,
47923,
47930,
47931,
47941,
47949,
47950,
47952,
47953,
47958,
47959,
47962,
47964,
47966,
47967,
47968,
47969,
47973,
47974,
47976,
47982,
47985,
47986,
47987,
47994,
47996,
48005,
48009,
48011,
48018,
48021,
48022,
48026,
48032,
48036,
48044,
48047,
48048,
48050,
48058,
48059,
48064,
48068,
48075,
48077,
48089,
48090,
48091,
48095,
48096,
48098,
48100,
48104,
48106,
48108,
48109,
48110,
48112,
48116,
48118,
48122,
48123,
48126,
48128,
48130,
48131,
48136,
48137,
48139,
48147,
48148,
48155,
48156,
48157,
48159,
48161,
48163,
48165,
48167,
48168,
48169,
48172,
48173,
48174,
48176,
48178,
48179,
48188,
48189,
48191,
48192,
48194,
48201,
48205,
48214,
48215,
48220,
48221,
48223,
48234,
48236,
48238,
48239,
48241,
48249,
48250,
48252,
48259,
48262,
48265,
48268,
48277,
48278,
48282,
48284,
48288,
48289,
48290,
48293,
48295,
48302,
48303,
48307,
48314,
48316,
48319,
48321,
48323,
48327,
48328,
48331,
48335,
48342,
48343,
48348,
48349,
48350,
48353,
48361,
48364,
48367,
48372,
48373,
48377,
48381,
48384,
48386,
48391,
48392,
48399,
48400,
48405,
48409,
48417,
48422,
48424,
48425,
48426,
48429,
48431,
48451,
48455,
48457,
48459,
48461,
48462,
48468,
48471,
48473,
48475,
48476,
48477,
48478,
48480,
48481,
48482,
48483,
48491,
48496,
48498,
48500,
48501,
48503,
48504,
48507,
48510,
48512,
48515,
48517,
48520,
48524,
48536,
48537,
48538,
48541,
48551,
48553,
48559,
48560,
48563,
48564,
48565,
48567,
48568,
48569,
48570,
48572,
48575,
48576,
48580,
48581,
48586,
48587,
48590,
48591,
48605,
48606,
48608,
48611,
48620,
48621,
48628,
48630,
48637,
48640,
48641,
48646,
48652,
48653,
48655,
48657,
48660,
48661,
48664,
48671,
48673,
48674,
48678,
48689,
48690,
48693,
48695,
48696,
48700,
48705,
48708,
48710,
48717,
48719,
48727,
48729,
48731,
48750,
48763,
48769,
48770,
48771,
48795,
48796,
48799,
48804,
48806,
48810,
48812,
48813,
48814
]

# Obtener los nombres de las columnas una vez ejecutada la consulta con el primer parámetro
cursor.execute("EXEC SP_DetalleInformacionPresupuestos ?", parametros[0])
column_names = [column[0] for column in cursor.description]

# Escribir los resultados en un archivo CSV
with open('resultadosdeta.csv', 'w', newline='') as csvfile:
    writer = csv.writer(csvfile)
    # Escribir los nombres de las columnas
    writer.writerow(column_names)
    
    # Escribir los datos para cada parámetro
    for parametro in parametros:
        cursor.execute("EXEC SP_DetalleInformacionPresupuestos ?", parametro)
        results = cursor.fetchall()
        writer.writerows(results)

print(results)

# Cerrar el cursor y la conexión
cursor.close()
connection.close()
